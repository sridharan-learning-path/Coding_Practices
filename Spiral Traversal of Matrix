package Practice;

public class SpiralTraverse {

	public static void main(String[] args) {

		int[][] sample = { { 1, 2, 3, 4, 1 }, { -4, 5, 6, 9, 2 }, { 7, 8, 9, 1, 3 }, { 0, -2, 2, 3, 4 } };

		int rowLength = sample.length;

		int columnLength = sample[0].length;

		int totalElement = rowLength * columnLength;

		int count = 1;

		int startRow = 0;
		int endRow = rowLength - 1;
		int startColum = 0;
		int endcolum = columnLength - 1;

		while (count <= totalElement) {

      // Left to Right
			for (int i = startRow; i < endcolum & count <= totalElement; i++) {
				System.out.println(sample[startRow][i]);
				count = count + 1;
				;
			}

      // Up to Down
			for (int i = startRow; i <= endRow & count <= totalElement; i++) {

				System.out.println(sample[i][endcolum]);
				count = count + 1;
			}

      // Right to Left
			for (int i = endcolum - 1; i >= startColum & count <= totalElement; i--) {

				System.out.println(sample[endRow][i]);
				count = count + 1;
			}

      // Down to Up
			for (int i = endRow - 1; i >= startRow + 1 & count <= totalElement; i--) {

				System.out.println(sample[i][startColum]);
				count = count + 1;
			}

      //Updating the start and ending values
			startRow = startRow + 1;
			endRow = endRow - 1;
			startColum = startColum + 1;
			endcolum = endcolum - 1;

		}

	}

}
